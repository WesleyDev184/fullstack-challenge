/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PtdRouteImport } from './routes/_ptd'
import { Route as PtdIndexRouteImport } from './routes/_ptd/index'
import { Route as AuthRegisterRouteImport } from './routes/auth/register'
import { Route as AuthLoginRouteImport } from './routes/auth/login'

const PtdRoute = PtdRouteImport.update({
  id: '/_ptd',
  getParentRoute: () => rootRouteImport,
} as any)
const PtdIndexRoute = PtdIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PtdRoute,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/': typeof PtdIndexRoute
}
export interface FileRoutesByTo {
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/': typeof PtdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_ptd': typeof PtdRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/_ptd/': typeof PtdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/auth/login' | '/auth/register' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/auth/login' | '/auth/register' | '/'
  id: '__root__' | '/_ptd' | '/auth/login' | '/auth/register' | '/_ptd/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  PtdRoute: typeof PtdRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_ptd': {
      id: '/_ptd'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PtdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_ptd/': {
      id: '/_ptd/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PtdIndexRouteImport
      parentRoute: typeof PtdRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface PtdRouteChildren {
  PtdIndexRoute: typeof PtdIndexRoute
}

const PtdRouteChildren: PtdRouteChildren = {
  PtdIndexRoute: PtdIndexRoute,
}

const PtdRouteWithChildren = PtdRoute._addFileChildren(PtdRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  PtdRoute: PtdRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
